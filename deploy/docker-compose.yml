version: '3.2'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  blue: &app
    environment:
      - VIRTUAL_HOST=whoami.local
      - WEB_CONCURRENCY=1
      - NODE_ENV=production
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - REDIS_URL=redis://redis:6379/
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    image: docker_on_rails_test:1.1.0
    healthcheck:
      test: curl -sS http://localhost:3000/healthcheck || exit 1
      interval: 30s
      timeout: 3s
      retries: 30

  green:
    <<: *app

  postgres:
    image: postgres:latest
    volumes:
      - postgres:/var/lib/postgresql/data
      - ../log:/root/log:cached
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  postgres:
  redis:
